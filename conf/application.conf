# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

# Clients to forward messages to. More to be added...
clients = ["intercom", "segment"]

# Intercom data
# test env: intercom.appid = "g420mfqq" intercom.apikey = "5b80bf58ed6d195dbc27c7a3284417ca97d5c737"
intercom.appid = "b5c2f4a46c2b3081fa75e279182f687d940e0649"
intercom.appid = ${?INTERCOM_APPID}
intercom.apikey = "81f2ca4699c54e4cda001fcf1d6fe55629360c37"
intercom.apikey = ${?INTERCOM_APIKEY}
intercom.apiurl = "https://api.intercom.io"

# Core url
centralapp {
  # service discovery root dns, for example, centralapp-core.marathon.mesos
  root = "centralapp"
  root = ${?CENTRALAPP_ROOT}
}
coreservice.name = "centralapp-core"
coreservice.name = ${?CORE_SERVICE_NAME}
coreservice.location = ${coreservice.name}"."${centralapp.root}
coreservice.location = ${?CORE_SERVICE_LOCATION}
coreservice.protocol = "http"
coreservice.protocol = ${?CORE_SERVICE_PROTOCOL}
coreservice.port = 9000
coreservice.port = ${?CORE_SERVICE_PORT}
coreservice.user.path = "/api/v1/user"
coreservice.user.path = ${?CORE_SERVICE_USER_PATH}
coreservice.user.url = ${coreservice.protocol}"://"${coreservice.location}":"${coreservice.port}${coreservice.path}
