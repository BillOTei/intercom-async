package models.intercom.bulk

import play.api.libs.json.{JsObject, JsValue, Json, Writes}

/**
  * The intercom bulk obj for bulk updates
  *
  * @param items: the data to update
  * @param optJobId: the job id generated by intercom, if supplied, data is appended to the current bulk
  */
case class Bulk(
               items: List[Item],
               optJobId: Option[String] = None
               )

object Bulk {

  implicit val jsonWrites: Writes[Bulk] = new Writes[Bulk] {
    override def writes(b: Bulk): JsValue = Json.obj(
      "items" -> b.items
    ) ++ {
      if (b.optJobId.isDefined) Json.obj("job" -> Json.obj("id" -> b.optJobId.get))
      else Json.obj()
    }
  }

  /**
    * Returns the Bulk obj for company user link deletion
    * @param placeId: the place/company id
    * @param users: the list of users to delete link from
    * @return
    */
  def getForCompanyUserDeletion(placeId: Long, users: List[JsObject]): Bulk = Bulk(
    users flatMap {
      user => (user \ "email").asOpt[String] map {
        email => Item(
          "post",
          "user",
          Json.obj(
            "email" -> email,
            "companies" -> Json.arr(
              Json.obj(
                "company_id" -> placeId.toString,
                "remove" -> true
              )
            )
          )
        )
      }
    }
  )

}